{
	"info": {
		"_postman_id": "0e515a6d-3e1d-448e-ab9c-06bb4fe4de34",
		"name": "CoinWrap",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Auth",
			"item": [
				{
					"name": "Create User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"user\": \"test\",\r\n    \"password\": \"test\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{APP_URL}}/auth/new",
							"host": [
								"{{APP_URL}}"
							],
							"path": [
								"auth",
								"new"
							]
						}
					},
					"response": []
				},
				{
					"name": "Auth Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Got token\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.collectionVariables.set(\"TOKEN\", jsonData['token']);\r",
									"    pm.expect(jsonData['token']).not.eq(undefined);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"user\": \"test\",\r\n    \"password\": \"test\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{APP_URL}}/auth/login",
							"host": [
								"{{APP_URL}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Assets",
			"item": [
				{
					"name": "Get Assets",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Test asset data length\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data.length).to.gte(1);\r",
									"\r",
									"    jsonData.data.forEach(function (asset) {\r",
									"        pm.expect(asset).to.have.property('id');\r",
									"        pm.expect(asset).to.have.property('rank');\r",
									"        pm.expect(asset).to.have.property('symbol');\r",
									"        pm.expect(asset).to.have.property('name');\r",
									"        pm.expect(asset).to.have.property('supply');\r",
									"        pm.expect(asset).to.have.property('maxSupply');\r",
									"        pm.expect(asset).to.have.property('marketCapUsd');\r",
									"        pm.expect(asset).to.have.property('volumeUsd24Hr');\r",
									"        pm.expect(asset).to.have.property('priceUsd');\r",
									"        pm.expect(asset).to.have.property('changePercent24Hr');\r",
									"        pm.expect(asset).to.have.property('vwap24Hr');\r",
									"        pm.expect(asset).to.have.property('explorer');\r",
									"    });\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{APP_URL}}/assets",
							"host": [
								"{{APP_URL}}"
							],
							"path": [
								"assets"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Bitcoin Asset",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Asset is bitcoin\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data.id).to.eql('bitcoin');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{APP_URL}}/assets/bitcoin",
							"host": [
								"{{APP_URL}}"
							],
							"path": [
								"assets",
								"bitcoin"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Bitcoin Asset History",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Test asset history length\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data.length).to.gte(1);\r",
									"\r",
									"    jsonData.data.forEach(function (asset) {\r",
									"        pm.expect(asset).to.have.property('priceUsd');\r",
									"        pm.expect(asset).to.have.property('time');\r",
									"        pm.expect(asset).to.have.property('date');\r",
									"    });\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{APP_URL}}/assets/bitcoin/history?interval=d1",
							"host": [
								"{{APP_URL}}"
							],
							"path": [
								"assets",
								"bitcoin",
								"history"
							],
							"query": [
								{
									"key": "interval",
									"value": "d1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Bitcoin Asset Markets",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Test asset markets length\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data.length).to.gte(1);\r",
									"});\r",
									"\r",
									"pm.test(\"Test asset markets are for bitcoin\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    jsonData.data.forEach(function(market) {\r",
									"        pm.expect(market.baseId + market.quoteId).to.include('bitcoin');\r",
									"    });\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{APP_URL}}/assets/bitcoin/markets",
							"host": [
								"{{APP_URL}}"
							],
							"path": [
								"assets",
								"bitcoin",
								"markets"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Rates",
			"item": [
				{
					"name": "Get Rates",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Test asset rates length\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data.length).to.gte(1);\r",
									"\r",
									"    jsonData.data.forEach(function (asset) {\r",
									"        pm.expect(asset).to.have.property('id');\r",
									"        pm.expect(asset).to.have.property('symbol');\r",
									"        pm.expect(asset).to.have.property('currencySymbol');\r",
									"        pm.expect(asset).to.have.property('type');\r",
									"        pm.expect(asset).to.have.property('rateUsd');\r",
									"    });\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{APP_URL}}/rates",
							"host": [
								"{{APP_URL}}"
							],
							"path": [
								"rates"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Bitcoin Rate",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Rate is for bitcoin\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data.id).to.eql('bitcoin');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{APP_URL}}/rates/bitcoin",
							"host": [
								"{{APP_URL}}"
							],
							"path": [
								"rates",
								"bitcoin"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Exchanges",
			"item": [
				{
					"name": "Get Exchanges",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Test asset exchanges length\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data.length).to.gte(1);\r",
									"\r",
									"    jsonData.data.forEach(function (asset) {\r",
									"        pm.expect(asset).to.have.property('exchangeId');\r",
									"        pm.expect(asset).to.have.property('rank');\r",
									"        pm.expect(asset).to.have.property('name');\r",
									"        pm.expect(asset).to.have.property('percentTotalVolume');\r",
									"        pm.expect(asset).to.have.property('volumeUsd');\r",
									"        pm.expect(asset).to.have.property('tradingPairs');\r",
									"        pm.expect(asset).to.have.property('socket');\r",
									"        pm.expect(asset).to.have.property('exchangeUrl');\r",
									"        pm.expect(asset).to.have.property('updated');\r",
									"    });\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{APP_URL}}/exchanges",
							"host": [
								"{{APP_URL}}"
							],
							"path": [
								"exchanges"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Kraken Exchange",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Exchange is kraken\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data.exchangeId).to.eql('kraken');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{APP_URL}}/exchanges/kraken",
							"host": [
								"{{APP_URL}}"
							],
							"path": [
								"exchanges",
								"kraken"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Markets",
			"item": [
				{
					"name": "Get Markets",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Test markets length\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data.length).to.gte(1);\r",
									"\r",
									"    jsonData.data.forEach(function (asset) {\r",
									"        pm.expect(asset).to.have.property('exchangeId');\r",
									"        pm.expect(asset).to.have.property('rank');\r",
									"        pm.expect(asset).to.have.property('baseSymbol');\r",
									"        pm.expect(asset).to.have.property('baseId');\r",
									"        pm.expect(asset).to.have.property('quoteSymbol');\r",
									"        pm.expect(asset).to.have.property('quoteId');\r",
									"        pm.expect(asset).to.have.property('priceQuote');\r",
									"        pm.expect(asset).to.have.property('priceUsd');\r",
									"        pm.expect(asset).to.have.property('volumeUsd24Hr');\r",
									"        pm.expect(asset).to.have.property('percentExchangeVolume');\r",
									"        pm.expect(asset).to.have.property('tradesCount24Hr');\r",
									"        pm.expect(asset).to.have.property('updated');\r",
									"    });\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{APP_URL}}/markets",
							"host": [
								"{{APP_URL}}"
							],
							"path": [
								"markets"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Candles",
			"item": [
				{
					"name": "Get Candles",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Test candles length\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data.length).to.gte(1);\r",
									"\r",
									"    jsonData.data.forEach(function (asset) {\r",
									"        pm.expect(asset).to.have.property('open');\r",
									"        pm.expect(asset).to.have.property('high');\r",
									"        pm.expect(asset).to.have.property('low');\r",
									"        pm.expect(asset).to.have.property('close');\r",
									"        pm.expect(asset).to.have.property('volume');\r",
									"        pm.expect(asset).to.have.property('period');\r",
									"    });\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{APP_URL}}/candles?exchange=poloniex&interval=h8&baseId=ethereum&quoteId=bitcoin",
							"host": [
								"{{APP_URL}}"
							],
							"path": [
								"candles"
							],
							"query": [
								{
									"key": "exchange",
									"value": "poloniex"
								},
								{
									"key": "interval",
									"value": "h8"
								},
								{
									"key": "baseId",
									"value": "ethereum"
								},
								{
									"key": "quoteId",
									"value": "bitcoin"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Wallet",
			"item": [
				{
					"name": "Deposit Asset",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"type\": \"bitcoin\",\r\n    \"amount\": 5.5\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{APP_URL}}/wallet/deposit",
							"host": [
								"{{APP_URL}}"
							],
							"path": [
								"wallet",
								"deposit"
							]
						}
					},
					"response": []
				},
				{
					"name": "Withdraw Asset",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"type\": \"bitcoin\",\r\n    \"amount\": 2\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{APP_URL}}/wallet/withdraw",
							"host": [
								"{{APP_URL}}"
							],
							"path": [
								"wallet",
								"withdraw"
							]
						}
					},
					"response": []
				},
				{
					"name": "List Assets",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Wallet contains bitcoin\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.assets[0].assetType).to.eql('bitcoin');\r",
									"    pm.expect(jsonData.assets[0].quantity).to.eql(3.5);\r",
									"    pm.expect(jsonData.assets[0].valueUSD).to.eql(jsonData.totalUSD);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{APP_URL}}/wallet/list",
							"host": [
								"{{APP_URL}}"
							],
							"path": [
								"wallet",
								"list"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Calculator",
			"item": [
				{
					"name": "Calculate Bitcoin USD",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Got USD value\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(parseFloat(jsonData.valueUSD)).to.gt(10000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{APP_URL}}/calculator?type=bitcoin&amount=2",
							"host": [
								"{{APP_URL}}"
							],
							"path": [
								"calculator"
							],
							"query": [
								{
									"key": "type",
									"value": "bitcoin"
								},
								{
									"key": "amount",
									"value": "2"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{TOKEN}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "APP_URL",
			"value": "http://localhost:3000",
			"type": "default"
		},
		{
			"key": "TOKEN",
			"value": "",
			"type": "default"
		}
	]
}